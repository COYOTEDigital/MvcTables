@using MvcTables.Samples.App_Start
@{
    var table = Html.MvcTable(() => new OrderTable());
}
<section id="Result" class="spy-on-me">
    <h4>Result</h4>
    @table.PageSizer()
    @table.Pagination()
    @table.Table()
    @table.Pagination()
    @table.PageSizer()
</section>
<section id="Config" class="spy-on-me">
    <h4>Config</h4>
    <pre class="prettyprint table-config">
    public class OrderTable : MvcTable&lt;Order&gt;
    {
        public override void Configure(IStaticTableConfiguration&lt;Order&gt; config)
        {
            config.SetAction(&quot;ListOrders&quot;, &quot;Northwind&quot;)
                  .SetCssClass(&quot;table table-striped&quot;)
                  .HiddenColumnFor(c =&gt; c.OrderID, cfg =&gt; cfg.Hide())
                  .ActionLinkColumn(c =&gt; c.Customer.City, &quot;Category&quot;, &quot;Home&quot;)
                  .DisplayForColumn(c =&gt; c.Shipper.CompanyName)
                  .DisplayForColumn(c =&gt; c.ShipRegion)
                  .DisplayForColumn(c =&gt; c.Order_Details[0].Quantity)
                  .ConfigurePagingControl(p => p.SetContainerCssClass(&quot;pagination&quot;).SetPageSizes(10, 20, 30));
        }
    }
    </pre>
</section>
<section id="ChildAction" class="spy-on-me">
    <h4>Child Action</h4>
    <pre class="prettyprint table-config">
        public ActionResult ListOrders(TableRequestModel request, FiltersModel model)
        {
            var entities = new NorthwindEntities(NorthwindServiceUrl);
            var orders = entities.Orders.Expand(o =&gt; o.Customer).Expand(o =&gt; o.Shipper).Expand(o =&gt; o.Order_Details);
            return TableResult.From(orders).Build&lt;OrderTable&gt;(request);
        }
</pre>
</section>