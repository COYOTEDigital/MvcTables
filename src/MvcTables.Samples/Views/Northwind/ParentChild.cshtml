@using MvcTables.Samples.App_Start
@{
    ViewBag.Title = "ParentChild";
    var parentTable = Html.MvcTable(() => new ParentOrderTable());
    var childTable = Html.MvcTable(() => new ChildOrderDetailTable());
}
<section id="Result" class="spy-on-me">   
    <h4>Result</h4>
    <div class="row-fluid">
        <div class="span6">
            <fieldset>
                <legend>Orders</legend>
                <div class="alert alert-info">
                    <strong>Click an Order</strong> to see the order details!
                </div>
                @parentTable.Table()
                @parentTable.Pagination()
            </fieldset>
        </div>
        <div class="span6">
            <fieldset>
                <legend>Details</legend>
                @childTable.Table()
            </fieldset>
        </div>
    </div>
</section>

<section id="ParentConfig" class="spy-on-me">
    <h4>Parent Config</h4>
    <pre class="prettyprint table-config">
    public class ParentOrderTable : MvcTable&lt;Order&gt;
    {
        public override void Configure(IStaticTableConfiguration&lt;Order&gt; config)
        {
            config.SetAction(&quot;ListParentOrders&quot;, &quot;Northwind&quot;)
                  .SetCssClass(&quot;table table-striped&quot;)
                  .ActionLinkColumn(c =&gt; c.OrderID, &quot;&quot;, &quot;#&quot;, o =&gt; new { o.OrderID }, new { @@class = ChildOrderDetailTable .Filter})
                  .DisplayForColumn(c =&gt; c.Customer.ContactName)
                  .DisplayForColumn(c =&gt; c.Shipper.CompanyName)
                  .AddColumn(c =&gt; c.Total,
                             cfg =&gt; cfg.FormatUsing(d =&gt; d.ToString(&quot;c&quot;)).IsSortable(false).SetHeaderText(&quot;Order Total&quot;))
                  .ConfigurePagingControl(p =&gt; p.SetContainerCssClass(&quot;pagination&quot;));
        }
    }
        </pre>s
</section>
<section id="ChildConfig" class="spy-on-me">
    <h4>Child Config</h4>
    <pre class="prettyprint table-config">
    public class ChildOrderDetailTable : MvcTable&lt;Order_Detail&gt;
    {

        public override void Configure(IStaticTableConfiguration&lt;Order_Detail&gt; config)
        {
            config.SetAction(&quot;ListChildOrderDetails&quot;, &quot;Northwind&quot;)
                .SetCssClass(&quot;table table-striped&quot;)
                .SetFilterClass(Filter)
                .DisplayForColumn(c =&gt; c.Product.ProductName,
                                  cfg =&gt;
                                  cfg.DefineFooter(
                                                   (h, rows) =&gt;
                                                   rows.Any() ? &quot;Order ID: &quot; + h.ViewData.Model.First().OrderID : &quot;&quot;))
                .DisplayForColumn(c =&gt; c.Quantity)
                .DisplayForColumn(c =&gt; c.UnitPrice)
                .DisplayForColumn(c =&gt; c.LineTotal,
                                  cfg =&gt;
                                  cfg.DefineFooter(
                                                   (h, rows) =&gt;
                                                   rows.Any() ? rows.Sum(od =&gt; od.LineTotal).ToString(&quot;c&quot;) : &quot;&quot;));
        }
    }
</pre>
</section>
<section id="ChildAction" class="spy-on-me">
    <h4>Child Actions</h4>
    <pre class="prettyprint table-config">
        public ActionResult ListChildOrderDetails(TableRequestModel request, int? orderId)
        {
            var entities = new NorthwindEntities.NorthwindEntities(NorthwindServiceUrl);
            IQueryable&lt;Order_Detail&gt; orderDetails = entities.Order_Details.Expand(o =&gt; o.Product);
            if (orderId == null)
                orderDetails = orderDetails.Where(o =&gt; false);
            else
                orderDetails = orderDetails.Where(o =&gt; o.OrderID == orderId.Value);

            return new TableResult&lt;Order_Detail&gt;(orderDetails, "ChildOrderDetails", request);
        }

        public ActionResult ListOrdersForFilters(TableRequestModel request, FiltersModel model)
        {
            var entities = new NorthwindEntities.NorthwindEntities(NorthwindServiceUrl);
            IQueryable&lt;Order&gt; orders = entities.Orders.Expand(o =&gt; o.Customer).Expand(o =&gt; o.Shipper).Expand(o =&gt; o.Order_Details);
            if (!String.IsNullOrEmpty(model.SelectedCustomerId))
                orders = orders.Where(o =&gt; o.CustomerID == model.SelectedCustomerId);
            return new TableResult&lt;Order&gt;(orders, "Filters", request);
        }
</pre>

</section>